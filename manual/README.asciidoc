= Care-O-bot 4 Manual

== Contents

. <<AdminManual,Administrator Manual>>
.. <<Setup robot pcs,Setup robot pcs>>
.. <<Setup internal robot network,Setup internal robot network>>
.. <<Install NFS,Install NFS>>
.. <<Enable passwordless login,Enable passwordless login>>
.. <<Setup NTP time synchronitation,Setup NTP time synchronitation>>
.. <<Install ROS and driver software,Install ROS and driver software>>
.. <<Setup hardware components, Setup hardware components>>
.. <<Create new users accounts, Create new users accounts>>
.. <<Network infrastructure for external access to the robot,Network infrastructure for external access to the robot>>
.. <<Calibration,Calibration>>
.. <<Backup and restore, Backup and restore>>
. <<UserManual, User Manual>>


== [[AdminManual]] Administrator Manual

The following administrator manual requires some enhanced knowledge about:

* Linux/Ubuntu
* Network configuration
* Source code management with git
* ROS installation and usage

If you are missing some of this requirements or feel uncomfortable with what you are doing, please interrupt and ask somebody to help you before continuing.


=== [[Setup robot pcs]] Setup robot pcs 

On all Care-O-bot 4 there are at least six pcs... 


==== Install operating system 

The first step is to install the operating system for each base, torso and sensorring pc. We are using Ubuntu as the main operating system for the robot. We recommend to install the Ubuntu 12.4 LTS (long term stable) 64-bit version because this version is well tested to work with the hardware. First please install Ubuntu (English version) creating a normal swap partition. Please choose robot as an admin account with a really safe password which should only be known to the local robot administrator. 

The hostnames of the pcs should be:

* Base pc:
**  cob4-X-b1

* Torso pcs:
** cob4-X-t1
** cob4-X-t2
** cob4-X-t3

* Sensorring pc:
** cob4-X-s1

* Head pc:
** cob4-X-h1

==== Install basic tools

In the case of the NUC pcs it is necessary install the Ethernet driver http://sourceforge.net/projects/e1000[e1000e]

Next we have to install some basic tools for the further setup of the pcs. In order to install the packages a internet connection is needed.


----
sudo apt-get update
sudo apt-get install vim tree gitg meld curl openjdk-6-jdk zsh terminator language-pack-de language-pack-en ipython
----

==== Setup ssh server

Install openssh server on all robot pcs

----
sudo apt-get install openssh-server
----

Let the server send a alive interval to clients to not get a broken pipe. Execute the following line on all robot pcs:

----
echo "ClientAliveInterval 60" | sudo tee -a /etc/ssh/sshd_config
----

==== Setup robot account for administration tasks

To facilitate the further setup we created a setup repository with some helpful scripts. To checkout the setup repository use:

----
mkdir ~/git
cd ~/git
git clone git://github.com/ipa320/setup.git
----

Allow robot user to execute sudo command without password. Add robot +ALL=(ALL) NOPASSWD: ALL+ to /etc/sudoers on all robot pcs

----
sudo visudo -f /etc/sudoers
----

==== [[RootUser]] Setup root local account 

Enable root account on all robot pcs

----
ssh cob4-X-yZ
sudo passwd root
----

=== [[Setup internal robot network]] Setup internal robot network

Inside the robot there’s a router which connects the pcs and acts as gateway to
the building network. Setup the router with the following configuration.

The hostname of the router should be the name of the robot cob4-X and the IP address 10.4.X.1.

It is recommendable defined in the router static ip address for the pcs, using the MAC address for the registration. Where the IP addresses should be:


* cob4-X-b1 : +10.4.X.11+
* cob4-X-t1 : +10.4.X.21+
* cob4-X-t2 : +10.4.X.22+
* cob4-X-t3 : +10.4.X.23+
* cob4-X-s1 : +10.4.X.31+
* cob4-X-h1 : +10.4.X.41+

We recommend remove the ubuntu network manager and configure the LAN port using the file +/etc/network/interfaces+ 

----
sudo apt-get remove network-manager
----

The +/etc/network/interfaces+  should looks:

----
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
----

Be sure that you are using the eth0 network port, you can rename your port modifying the udev rules (/etc/udev/rules.d/70-persistent-net.rules).

=== [[Install NFS]] Install NFS

After the network is configured properly we can setup a NFS between the robot pcs. cob4-X-b1 (base pc) will act as the NFS server and the others as NFS client.

In order to protect the pc’s access, we recommend create a local administrator user( <<RootUser, root user>>) in each pc, in this case if there is a problem in the sever (cob4-X-b1) or in the network this local user can access.


==== NFS configuration on cob4-X-b1 (server)

Install the NFS server package and create the NFS directory

----
sudo apt-get install nfs-kernel-server
sudo mkdir /u
----

Add the following line to /etc/fstab:

----
/home /u none bind 0 0
----

Now we can mount the drive

----
sudo mount /u
----

Activate +STATD+ in +/etc/default/nfs-common+ by changing th +NEED_STATD+ to yes

----
NEED_STADT=yes
----

Add the following line to +/etc/exports+:

----
/u *(rw,fsid=0,sync,no_subtree_check)
----

Change the home directory of the robot user from +/home/robot+ to +/u/robot+ in
the +/etc/passwd+ file.

After finishing you need to reboot the pc

----
sudo reboot
----

==== NFS configuration on torso, sensorring and head pcs (clients)

Install the NFS client package and create the NFS directory

----
sudo apt-get install nfs-kernel-server autofs
sudo mkdir /u
----

Activate +STATD+ in +/etc/default/nfs-common+ by changing the +NEED_STATD+ to
yes

----
NEED_STATD=yes
----

Edit +/etc/auto.master+ and add

----
/-  /etc/auto.direct
----

Create a new file /etc/auto.direct with the following line, IP is the parameter
that define your <<Setup internal robot network, robot network>>:

----
/u  -fstype=nfs4    10.4.X.11:/
----

Activate the NFS

----
sudo update-rc.d autofs defaults
sudo service autofs restart
sudo modprobe nfs
----

Change the home directory of the robot user from +/home/robot+ to +/u/robot+ in
the +/etc/passwd+ file.

After finishing you need to reboot the pc

----
sudo reboot
----

=== [[Enable passwordless login]] Enable passwordless login

Enable passwordless login to all robot pcs for robot user:

----
ssh-keygen
ssh-copy-id cob4-X-b1
ssh cob4-X-t1
ssh cob4-X-t2
ssh cob4-X-t3
ssh cob4-X-s1
ssh cob4-X-h1
----

And for root user:

----
su root
ssh-keygen
ssh-copy-id cob4-X-b1
ssh cob4-X-t1
ssh cob4-X-t2
ssh cob4-X-t3
ssh cob4-X-s1
ssh cob4-X-h1
----

=== [[Setup NTP time synchronitation]] Setup NTP time synchronitation

Install the ntp package

----
sudo apt-get install ntp
----

==== NTP configuration on cob4-X-b1 (NTP server)

Edit +/etc/ntp.conf+, change the server to +0.pool.ntp.org+ and add the restrict
line, IP is the parameter that define your <<Setup internal robot network,robot network>>.

----
server 0.pool.ntp.org
restrict 10.4.X.0 mask 255.255.255.0 nomodify notrap
----

==== NTP configuration on torso, sensorring and head pcs (NTP clients)

Edit +/etc/ntp.conf+, change the server to +cob4-X-b1+:

----
server 10.4.X.11
----

=== [[Install ROS and driver software]] Install ROS and driver software

For general instructions see http://wiki.ros.org/hydro/Installation/Ubuntu[Ubuntu install of ROS Hydro]

==== Setup bash environment

We setup a special bash environment to be used on the Care-O-bot pcs. The environments differ on each pc. Copy the +cob.bash.bashrc.pcY+ to +/etc/cob.bash.bashrc+ on each pc, where Y is b, t, s or h depending of the component, b for base pc, t for torso pcs, s for sensorring pc and h for head pc.

----
sudo cp ~/git/setup/cob4-pcs/cob.bash.bashrc.pcY /etc/cob.bash.bashrc
---- 

All users have a pre-configured bash environment too, therefore copy +user.bashrc+ to +∼/.bashrc+

----
cp ~/git/setup/cob4-pcs/user.bashrc ~/.bashrc
----

The .bashrc file is preconfigured for +cob4-1+ and +ipa-apartment+, please change
the following lines to fit your robot configuration. At the bottom of your +.bashrc+
you have to define +ROS_MASTER_URI+ to be +http://cob4-X-b1:11311+, +ROBOT+ to
be +cob4-X+ and +ROBOT_ENV+ to point to your environment.

----
ROS_MASTER_URI=http://cob4-X-b1:11311
ROBOT=cob4-X
ROBOT_ENV=YOUR_ENVIRONMENT
----





